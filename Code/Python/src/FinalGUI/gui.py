
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Frame
import tkinter as tk

import matplotlib
matplotlib.use('Agg')
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import numpy as np
import sys
import os

def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS2
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)

window = Tk()

window.geometry("1920x1080")
window.configure(bg = "#222222")

#--------------matplotlib--------------------

fig, ax = plt.subplots(facecolor='#4F406A')
fig2, ax2 = plt.subplots(facecolor='#FFFFFF')

ax.tick_params(direction='out', length=6, width=2, 
	colors='white',
    grid_color='r', grid_alpha=0.5)


x = np.arange(-2*np.pi, 2*np.pi, 0.01)
line, = ax.plot(x, np.sin(x), color='r', marker='o', linestyle='dotted', 
	linewidth=8, markersize=1, markeredgecolor='m')  #dotted, dashdot,dashed

plt.xlim([-2*np.pi, 2*np.pi])
plt.ylim([-2,2])  #x.min(), x.max()

def animate(i):
    line.set_ydata(np.sin(x+ i/40))  
    return line,

def iniciar():	
	global ani
	ani = animation.FuncAnimation(fig, animate, 
		interval=20, blit=True, save_count=10)	 
	canvasmatplot.draw()

def pausar():
	ani.event_source.stop() 

def reanudar():
	ani.event_source.start()

#--------------end matplotlib----------------


canvas = Canvas(
    window,
    bg = "#222222",
    height = 1080,
    width = 1920,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)
frame = Frame(window,  bg='gray22',bd=3)
canvas.create_window(150,400, window = frame, width=380, height = 210, anchor = "nw")

canvasmatplot = FigureCanvasTkAgg(fig, master = frame)  
canvasmatplot.get_tk_widget().pack(padx=0, pady=0 , fill='both') 

frame2 = Frame(window,  bg='gray22',bd=3)
canvas.create_window(680,400, window = frame2, width=380, height = 210, anchor = "nw")

canvasmatplot2 = FigureCanvasTkAgg(fig2, master = frame2)  
canvasmatplot2.get_tk_widget().pack(padx=0, pady=0 , fill='both') 

iniciar()


canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    597.0,
    50.0,
    1322.0,
    166.0,
    fill="#3A3A3A",
    outline="")

canvas.create_rectangle(
    81.0,
    300.0,
    1120.0,
    705.0,
    fill="#3A3A3A",
    outline="")

image_image_1 = PhotoImage(
    file=resource_path("assets\\UI_images\\image_1.png"))
image_1 = canvas.create_image(
    1625.0,
    108.0,
    image=image_image_1
)

canvas.create_text(
    1667.0,
    85.0,
    anchor="nw",
    text="Connected",
    fill="#FFFFFF",
    font=("Inter", 40 * -1)
)

Bluetooth_Connected = canvas.create_oval(
    1560.0-15,
    108.0-15,
    1560.0+15,
    108.0+15,
    outline = "cyan",
    width = 2
)

canvas.create_text(
    81.0,
    85.0,
    anchor="nw",
    text="SEMG Device",
    fill="#FFFFFF",
    font=("Inter", 64 * -1)
)

canvas.create_text(
    703.0,
    85.0,
    anchor="nw",
    text="COM Port:",
    fill="#FFFFFF",
    font=("Inter", 40 * -1)
)
#COM Port selection
Com_list = ["COM 1","COM 2","COM 3","COM 4","COM 5","COM 6","COM 7","COM 8","COM 9"]
value_inside = tk.StringVar(window) 
value_inside.set("COM Port") 

entry_image_1 = PhotoImage(
    file=resource_path("assets\\UI_images\\entry_1.png"))
entry_bg_1 = canvas.create_image(
    1083.0,
    108.5,
    image=entry_image_1
)

COM_menu = tk.OptionMenu(
    window, 
    value_inside, 
    *Com_list) 
COM_menu.pack() 
COM_menu.config(
    font =('Arial',(40)),
    bg = '#1E1E1E',
    fg = 'WHITE',
    highlightthickness = 0,
    activebackground = '#00988B',
    activeforeground = 'WHITE',
    border = 0,
    indicator = 0
)

COM_menu.grid(column = 0, row = 0, sticky = tk.N + tk.EW, padx=956, pady = (75,0))

COM_menu['menu'].config(
    font =('Arial',(40)),
    bg = '#1E1E1E',
    fg = 'WHITE',
    activebackground = '#00988B',
    activeforeground = 'WHITE',
    border = 0
)
#IN1 Module 1 electrode type
entry_image_2 = PhotoImage(
    file=resource_path("assets\\UI_images\\entry_2.png"))
entry_bg_2 = canvas.create_image(
    404.5,
    656.5,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#1E1E1E",
    fg="#FFFFFF",
    highlightthickness=0,
    font =('Arial',(16))
)
entry_2.place(
    x=338.5,
    y=637.0,
    width=132.0,
    height=37.0
)

entry_2.insert(0, 'Not Detected')

#IN2 Module 1 electrode type
entry_image_3 = PhotoImage(
    file=resource_path("assets\\UI_images\\entry_3.png"))
entry_bg_3 = canvas.create_image(
    938.5,
    656.5,
    image=entry_image_3
)
entry_3 = Entry(
    bd=0,
    bg="#1E1E1E",
    fg="#FFFFFF",
    highlightthickness=0,
    font =('Arial',(16))
)
entry_3.place(
    x=872.5,
    y=637.0,
    width=132.0,
    height=37.0
)
entry_3.insert(0, 'Not Detected')

image_image_3 = PhotoImage(
    file=resource_path("assets\\UI_images\\image_3.png"))
image_3 = canvas.create_image(
    1550.0,
    657.0,
    image=image_image_3
)

canvas.create_text(
    435.0,
    246.0,
    anchor="nw",
    text="Module 1",
    fill="#FFFFFF",
    font=("Inter", 40 * -1)
)

canvas.create_text(
    174.0,
    331.0,
    anchor="nw",
    text="IN1",
    fill="#FFFFFF",
    font=("Inter", 40 * -1)
)

canvas.create_text(
    189.0,
    645.0,
    anchor="nw",
    text="Electrode:",
    fill="#FFFFFF",
    font=("Inter", 24 * -1)
)

canvas.create_text(
    723.0,
    645.0,
    anchor="nw",
    text="Electrode:",
    fill="#FFFFFF",
    font=("Inter", 24 * -1)
)

canvas.create_text(
    709.0,
    331.0,
    anchor="nw",
    text="IN2",
    fill="#FFFFFF",
    font=("Inter", 40 * -1)
)
window.resizable(False, False)
window.mainloop()
